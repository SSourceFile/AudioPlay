plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}
apply from: 'and_res_guard.gradle'
def conf = rootProject.ext
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(new File("${project.getProjectDir()}/keystore.properties")))

android {
    compileSdk conf.android.complieSdkVersion

    defaultConfig {
        applicationId conf.android.applicationId
        minSdk conf.android.minSdkVersion
        targetSdk conf.android.targetSdkVersion
        versionCode conf.android.versionCode
        versionName conf.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags conf.android.cppFlags
            }
        }
    }

    buildTypes {
        release {
            //开启资源压缩
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    //指定CMakeLists
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version conf.android.cmakeVersion
        }
    }
    //指定ndk路径
    ndkVersion = "22.1.7171670"
    lintOptions {
        abortOnError false
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['releaseKeyAlias']
            keyPassword keystoreProperties['releaseKeyPassword']
            storeFile file(keystoreProperties['releaseStoreFile'])
            storePassword keystoreProperties['releaseStorePassword']
        }
        debug {
            keyAlias keystoreProperties['debugKeyAlias']
            keyPassword keystoreProperties['debugKeyPassword']
            storeFile file(keystoreProperties['debugStoreFile'])
            storePassword keystoreProperties['debugStorePassword']
        }

    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (conf.isOpenModule) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
            }
        }
    }
    //开启viewbinding
    buildFeatures {
        viewBinding = true
    }

}

dependencies {

    implementation conf.dependencies.core_ktx
    implementation conf.dependencies.appCompt
    implementation conf.dependencies.material
    implementation conf.dependencies.constraintlayout
    testImplementation conf.dependencies.junit
    androidTestImplementation conf.dependencies.ext_junit
    androidTestImplementation conf.dependencies.espresso
    implementation conf.dependencies.rxPermission
    implementation conf.dependencies.rxjava
    implementation conf.dependencies.epic

}